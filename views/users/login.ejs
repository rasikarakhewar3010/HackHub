<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>HackHub Login</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.3.0/font/bootstrap-icons.css">
    <link rel="stylesheet" href="/login.css">
</head>
<body>
<canvas id="bgCanvas"></canvas>
<%- include("../includes/flash.ejs") %>
<div class="container">
    
    <div class="login-card">
        <div class="illustration">
            <img src="/74037ef9-2613-4ea0-8639-5a54996ae970.png" alt="3D Illustration">
        </div>
        <div class="login-form" >
            <div class="btns">
                <div class="register-div btn-div">
                    <a href="" class="register-btn">Register</a>
                </div>
                <div class="login-div btn-div">
                    <a href="" class="login-btn">Login</a>
                </div>
            </div>
            <div class="content">
                
                <div class="register-box box active">
                    <h2>Register in HackHub</h2>
                <form  action="/signup" method="post">
                    <input type="text" name="username" placeholder="Username" required>
                    <input type="email" name="email" placeholder="Email" required>
                    <input type="password" name="password" placeholder="Password" required>
                    <button type="submit">Sign In</button>
                </form>
                
                <div id="social-login">
                    <a href="/auth/google"><i class="bi bi-google"></i></a>
                    <a href="/auth/github"><i class="bi bi-github"></i></a>
                    <a href="/auth/linkedin"><i class="bi bi-linkedin"></i></a>
                </div>
                </div>
                
                <div class="login-box box hidden" id="login">
                    <h2>Login in HackHub</h2>
                <form  action="/login" method="post">
                    <input type="text" name="username" placeholder="Username" required>
                    <input type="password" name="password" placeholder="Password" required>
                    <button type="submit">Login</button>
                </form>
                
                <div id="social-login">
                    <a href="/auth/google"><i class="bi bi-google"></i></a>
                    <a href="/auth/github"><i class="bi bi-github"></i></a>
                    <a href="/auth/linkedin"><i class="bi bi-linkedin"></i></a>
                </div>
                </div>
                
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/animejs/3.2.1/anime.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.10.4/gsap.min.js"></script>
<script>
    // GSAP Animation
    gsap.to('.login-form', { opacity: 1, x: 0, duration: 1, delay: 0.5, ease: 'power3.out' });
    gsap.from('.container', { opacity: 0, y: 500, scale: 0, duration: 1, ease: 'power3.out' });
    // Three.js Background Setup
    let scene, camera, renderer, particles, geometry, material;
    function init() {
        scene = new THREE.Scene();
        camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 1, 1000);
        camera.position.z = 500;
        geometry = new THREE.BufferGeometry();
        const vertices = Array.from({ length: 1000 }, () => [THREE.MathUtils.randFloatSpread(2000), THREE.MathUtils.randFloatSpread(2000), THREE.MathUtils.randFloatSpread(2000)]).flat();
        geometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));
        material = new THREE.PointsMaterial({ color: 0x189AB4, size: 5, transparent: true, opacity: 0.8 });
        particles = new THREE.Points(geometry, material);
        scene.add(particles);
        renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('bgCanvas'), alpha: true });
        renderer.setSize(window.innerWidth, window.innerHeight);
        animate();
    }
    function animate() {
        requestAnimationFrame(animate);
        particles.rotation.x += 0.001;
        particles.rotation.y += 0.001;
        renderer.render(scene, camera);
    }
    document.addEventListener('mousemove', (event) => {
        anime({
            targets: particles.rotation,
            x: (event.clientY / window.innerHeight) * 2 - 1,
            y: (event.clientX / window.innerWidth) * 2 - 1,
            easing: 'easeOutQuad',
            duration: 400
        });
    });
    init();


    //for actve and hide
    document.addEventListener('DOMContentLoaded', () => {
    const loginBtn = document.querySelector('.login-btn');
    const loginBox = document.querySelector('.login-box');
    const registerBox = document.querySelector('.register-box');
    const registerBtn = document.querySelector('.register-btn');

// Function to show the register form and hide the login form
const showRegisterForm = () => {
    gsap.to(registerBox, {
        opacity: 1,
        x: 0,
        duration: 0.8, // Increased duration for smoother effect
        ease: "power2.out", // Smoother easing
        onStart: () => {
            registerBox.classList.add('active');
            registerBox.classList.remove('hidden');
        }
    });

    gsap.to(loginBox, {
        opacity: 0,
        x: -100, // Adjusted translation for smoother effect
        duration: 0.8, // Same duration as the other animation
        ease: "power2.out", // Matching easing
        onComplete: () => {
            loginBox.classList.add('hidden');
            loginBox.classList.remove('active');
        }
    });
};

// Function to show the login form and hide the register form
const showLoginForm = () => {
    gsap.to(loginBox, {
        opacity: 1,
        x: 0,
        duration: 0.8, // Consistent duration
        ease: "power2.out", // Smoother easing
        onStart: () => {
            loginBox.classList.add('active');
            loginBox.classList.remove('hidden');
        }
    });

    gsap.to(registerBox, {
        opacity: 0,
        x: 100, // Adjusted translation for smoother effect
        duration: 0.8, // Consistent duration
        ease: "power2.out", // Matching easing
        onComplete: () => {
            registerBox.classList.add('hidden');
            registerBox.classList.remove('active');
        }
    });
};


    // Add event listeners to the buttons
    registerBtn.addEventListener('click', (e) => {
        e.preventDefault(); // Prevent any default link behavior
        showRegisterForm();

        // Update active styles
        loginBtn.classList.remove('active-tab');
        registerBtn.classList.add('active-tab');
    });

    loginBtn.addEventListener('click', (e) => {
        e.preventDefault(); // Prevent any default link behavior
        showLoginForm();

        // Update active styles
        registerBtn.classList.remove('active-tab');
        loginBtn.classList.add('active-tab');
    });
});


</script>
</body>
</html>
